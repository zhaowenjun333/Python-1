"""
插入排序适用于小规模数据和部分有序数据的排序需求。

它是一种简单、稳定和原地的排序算法，对于小规模数据和部分有序的数据，插入排序表现良好。

它的优点包括易于实现、不需要额外空间存储排序结果以及能够保持相等元素的相对顺序不变。

然而，在处理大规模数据时，插入排序的性能可能不如其他高效的排序算法。

因此，根据具体的排序需求和数据规模，需要权衡插入排序的优缺点来选择合适的排序算法。
"""

import random
import time
import timeit


def insetion_sort(arr):
    # 遍历未排序部分的元素
    for i in range(1, len(arr)):
        # 当前要插入的元素
        key = arr[i]
        # 已排序部分的最后一个元素的下标
        j = i - 1

        # 将已排序部分中大于当前元素的元素向后移动
        while j >= 0 and arr[j] > key:
            arr[j+1] = arr[j]
            j -= 1

        # 将当前元素插入到正确位置
        arr[j+1] = key


if __name__ == '__main__':
    # 测试插入排序算法
    arr1 = [41, 33, 17, 80, 61, 5, 55]
    insetion_sort(arr1)
    print(arr1)
